@model List<FlyBugClub_WebApp.Models.BillBorrow>
<div class="center">
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/js/datepicker.js"></script>
<div class="body">
    <section class="dashboard">
        <div class="container">
            <div class="row">
                <div class="col col-md-4">
                    <div class="income tagtop">
                        <div class="center title">
                            <div class="title-header">
                                <div class="icon-title">
                                    <img src="~/img/img_icon/income.png" alt="">
                                    <span><b>Income</b></span>
                                </div>
                                <div>
                                    <a href="#" class="link"><i class="fa-solid fa-arrow-up-right-from-square"></i></a>
                                </div>
                            </div>
                        </div>
                        <div class="money">
                            <span class="unit">đ/<sup>year</sup></span>
                            <span class="money">@ViewBag.TotalAmount.ToString("0.000")</span>
                        </div>
                        <div class="note">
                            <p><span><i class="fa-solid fa-sort-up"></i>14%</span>form yesterday</p>
                        </div>
                    </div>

                </div>
                <div class="col col-md-4">
                    <div class="income tagtop">
                        <div class="center title">
                            <div class="title-header">
                                <div class="icon-title">
                                    <img src="~/img/img_icon/sales.png" alt="">
                                    <span><b>Sales</b></span>
                                </div>
                                <div>
                                    <a asp-area="Admin" asp-controller="OrderProcessing" asp-action="Bill" class="link"><i class="fa-solid fa-arrow-up-right-from-square"></i></a>
                                </div>
                            </div>
                        </div>
                        <div class="money">
                            <span class="unit"></span>
                            <span class="money">@ViewBag.TotalQuantity</span>
                        </div>
                        <div class="note">
                            <p><span><i class="fa-solid fa-sort-up"></i>14%</span>form yesterday</p>
                        </div>
                    </div>
                </div>
                <div class="col col-md-4">
                    <div class="income tagtop">
                        <div class="center title">
                            <div class="title-header">
                                <div class="icon-title">
                                    <img src="~/img/img_icon/web-visit.png" alt="">
                                    <span><b>Total bill</b></span>
                                </div>
                                <div>
                                    <a href="#" class="link"><i class="fa-solid fa-arrow-up-right-from-square"></i></a>
                                </div>
                            </div>
                        </div>
                        <div class="money">
                            <span class="unit"></span>
                            <span class="money">@ViewBag.countTrue</span>
                        </div>
                        <div class="note">
                            <p><span><i class="fa-solid fa-sort-up"></i>14%</span>form yesterday</p>
                        </div>
                    </div>
                </div>
                <div class="col col-md-8">
                    <div class="row m-0">
                        <div class="info-sales">
                            <div class="head-income">
                                <h5>Fanacial</h5>
                                <form>
                                    <div class="datepicker">
                                        <i class="fa-solid fa-calendar"></i>
                                        <input type="text" name="daterange" value="" class="" id="cuong" readonly />
                                    </div>
                                </form>
                            </div>
                            <form action="" class="income-form">
                                <div class="table-container">
                                    <table>
                                        <thead>
                                            <tr>
                                                <th class="stt">#</th>
                                                <th class="date">Date</th>
                                                <th>Income</th>
                                            </tr>
                                        </thead>
                                        <tbody id="list_billborrow"></tbody>
                                    </table>
                    <div class="info-sales">
                        <div class="head-income">
                            <h5>Fanacial</h5>
                            <form>
                                <div class="datepicker">
                                    <i class="fa-solid fa-calendar"></i>
                                    <input type="text" name="daterange" value="" class="" id="cuong" readonly />
                                </div>
                            </form>
                            <div class="total-income">
                                <div class="total">
                                    <div><b>Total income</b></div>
                                    <div><b id="TotalIncome" class="amount"></b></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row m-0">
                        <div class="info-sales ">
                            <div class="center">
                                <div id="chart_div"></div>
                            </div>
                        </div>   
                    </div>
                </div>
                <div class="col col-md-4">
                    <div class="row">
                        <div class="col">
                            <div class="calendar">
                                <div class="top-calendar">
                                    <div class="month-year" id="current-month-year">September 2022</div>
                                    <div class="icon-next-prev" id="month-year">
                                        <ul>
                                            <li><i class="fa-solid fa-angle-left" id="prev-month"></i></li>
                                            <li><i class="fa-solid fa-angle-right" id="next-month"></i></li>
                                        </ul>
                                    </div>
                                </div>
                                <ul class="weekdays">
                                    <li>Mo</li>
                                    <li>Tu</li>
                                    <li>We</li>
                                    <li>Th</li>
                                    <li>Fr</li>
                                    <li>Sa</li>
                                    <li>Su</li>
                                </ul>
                                <ul class="days" id="calendar-days">    
                                </ul>
                                <div class="schedules-title">Schedules</div>
                                <div class="schedules" id="id_schedules">
                                    
                                    <div class="schedule-wrap">
                                        <div class="schedule-box">
                                            <div class="center">
                                                <div class="schedule-day"><b class="random-background">23</b></div>
                                                <div class="schedule-content">
                                                    <p class="content">Nguyễn Văn A created an order</p>
                                                    <p class="time">14:00 - 16:00 at Thanh Thai</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    @* <div class="schedule-wrap">
                                        <div class="schedule-box">
                                            <div class="center">
                                                <div class="schedule-day"><b class="random-background"><span class="number">18</span></b></div>
                                                <div class="schedule-content">
                                                    <p class="content">Nguyễn Văn A created an order</p>
                                                    <p class="time">09:00 - 11:00 at Thanh Thai</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="schedule-wrap">
                                        <div class="schedule-box">
                                            <div class="center">
                                                <div class="schedule-day"><b class="random-background">18</b></div>
                                                <div class="schedule-content">
                                                    <p class="content">Nguyễn Văn A created an order</p>
                                                    <p class="time">09:00 - 11:00 at Thanh Thai</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div> *@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Mảng màu nền ngẫu nhiên
        const randomBackgroundColors = [
            "#ffcdb2", "#ffcdb2", "#e5989b", "#f2e8cf", "#a7c957", "#edf6f9", "#ffddd2", "#e29578",
            "#fca311", "#f2e9e4", "#caf0f8", "#90e0ef", "#ffb3c1", "#ffb5a7", "#fec89a", "#f8edeb",
            "#ffe8d6", "#b7b7a4", "#efd3d7", "#eff7f6", "#b2f7ef", "#ffdab9", "#b8b8ff", "#ffeedd"
        ];

        // Chọn một màu ngẫu nhiên cho mỗi phần tử <b>
        const randomBackgroundElements = document.querySelectorAll(".random-background");
        randomBackgroundElements.forEach(function (element) {
            const randomColor = randomBackgroundColors[Math.floor(Math.random() * randomBackgroundColors.length)];
            element.style.background = randomColor;
        });
    });
</script>

<script>
    //2023-10-29@@2023-11-11
    const currentDate = new Date();
    
    let currentYear = new Date().getFullYear();
    let currentMonth = new Date().getMonth();
    let daysInCurrentMonth = getDaysInMonth(currentYear, currentMonth);
 
    
    Get10Bill();
    
  


    document.getElementById('cuong').onchange = function () {

        let date = document.getElementById("cuong").className;

        if (date !== null) {

            fetchData(date);

        }
    };
    function getDaysInMonth(year, month) {
        // Lưu ý: Tháng trong JavaScript đếm từ 0 đến 11 (0 là tháng 1, 11 là tháng 12)
        // Nếu month không được chỉ định, nó sẽ lấy tháng hiện tại
        const lastDay = new Date(year, month + 1, 0).getDate();
        return lastDay;
    }

    // Lấy số ngày trong tháng hiện tại
    
    async function fetchData(date) {
        const response = await fetch(`/api/users/getbillbydate?date=${date}`);
        if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
        }

        const data = await response.json(); // Chuyển đổi response thành JSON
        // Ở đây, bạn có thể xử lý dữ liệu theo cách mong muốn
        const tbody = document.getElementById("list_billborrow");

        // Xóa nội dung cũ của tbody
        while (tbody.firstChild) {
            tbody.removeChild(tbody.firstChild);
        }
        var Sum = 0;

        data.forEach((item, i) => {
            const receiveDay = new Date(item.receiveDay);
            const status = item.status;
            const convertedValue = parseFloat(item.total) * 1000;
            Sum = Sum + convertedValue;
            const formattedValue = new Intl.NumberFormat('en-US', {
                style: 'currency',
                currency: 'VND',
                minimumFractionDigits: 0,
                maximumFractionDigits: 0,
            }).format(convertedValue);

            const newRow = document.createElement("tr");
            newRow.innerHTML = `
                <td>${i + 1}</td>
                <td>${receiveDay.toLocaleDateString('en-GB', { day: '2-digit', month: '2-digit', year: 'numeric' })}</td>
                <td>${formattedValue}</td>
            `;
            tbody.appendChild(newRow);

        });
        const formattedSum = new Intl.NumberFormat('en-US', {
            style: 'currency',
            currency: 'VND',
            minimumFractionDigits: 0,
            maximumFractionDigits: 0,
        }).format(Sum);
        const TotalIncome = document.getElementById("TotalIncome");

        TotalIncome.innerHTML = formattedSum;
    }

    async function Get10Bill() {
        const response = await fetch(`/api/users/get10bill`);
        if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
        }

        const data = await response.json(); // Chuyển đổi response thành JSON

        // Ở đây, bạn có thể xử lý dữ liệu theo cách mong muốn
        const tbody = document.getElementById("list_billborrow");

        // Xóa nội dung cũ của tbody
        while (tbody.firstChild) {
            tbody.removeChild(tbody.firstChild);
        }
        var Sum = 0;

        data.forEach((item, i) => {
            const receiveDay = new Date(item.receiveDay);
            const status = item.status;
            const convertedValue = parseFloat(item.total) * 1000;
            Sum = Sum + convertedValue;
            const formattedValue = new Intl.NumberFormat('en-US', {
                style: 'currency',
                currency: 'VND',
                minimumFractionDigits: 0,
                maximumFractionDigits: 0,
            }).format(convertedValue);

            const newRow = document.createElement("tr");
            newRow.innerHTML = `
                    <td>${i + 1}</td>
                    <td>${receiveDay.toLocaleDateString('en-GB', { day: '2-digit', month: '2-digit', year: 'numeric' })}</td>
                    <td>${formattedValue}</td>
                `;
            tbody.appendChild(newRow);

        });
        const formattedSum = new Intl.NumberFormat('en-US', {
            style: 'currency',
            currency: 'VND',
            minimumFractionDigits: 0,
            maximumFractionDigits: 0,
        }).format(Sum);
        const TotalIncome = document.getElementById("TotalIncome");

        TotalIncome.innerHTML = formattedSum;
    }
    function getDaysInMonth(year, month) {
            // Lưu ý: Tháng trong JavaScript đếm từ 0 đến 11 (0 là tháng 1, 11 là tháng 12)
            // Nếu month không được chỉ định, nó sẽ lấy tháng hiện tại
        const lastDay = new Date(year, month + 1, 0).getDate();
        return lastDay;
    }

    // Lấy ngày, tháng và năm hiện tại
    

    // Hàm cập nhật ngày trong tháng
    function updateCalendar(currentMonth) {
        const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay();
        
        // Vị trí bắt đầu của các ngày trong tuần
        const startDayPosition = firstDayOfMonth === 0 ? 6 : firstDayOfMonth - 1;
        let daysInMonth = getDaysInMonth(currentYear, currentMonth);
        // Đối tượng HTML của ul#calendar-days
        const calendarDaysElement = document.getElementById('calendar-days');

        // Xóa các phần tử con cũ của ul#calendar-days
        calendarDaysElement.innerHTML = '';

        // Thêm các thẻ li vào ul#calendar-days
        for (let i = 0; i < startDayPosition; i++) {
            const emptyLi = document.createElement('li');

            calendarDaysElement.appendChild(emptyLi);
        }

        for (let i = 1; i <= daysInMonth; i++) {
            const dayLi = document.createElement('li');

            dayLi.textContent = i;
            dayLi.classList.add(i);
            
            // Nếu đây là ngày hiện tại, bạn có thể thêm một lớp CSS để làm nổi bật
            if (i === new Date().getDate() && currentMonth === new Date().getMonth() && currentYear === new Date().getFullYear()) {
                
                dayLi.id = "active";
            }

            // Thêm các logic khác tùy thuộc vào yêu cầu của bạn (ví dụ: xác định ngày có sự kiện)

            calendarDaysElement.appendChild(dayLi);
            
            updateMonthYearDisplay();
        }
        GetBillEvent(currentMonth, currentYear, daysInMonth);
    }



    function updateMonthYearDisplay() {
        const monthNames = [
            'January', 'February', 'March', 'April', 'May', 'June',
            'July', 'August', 'September', 'October', 'November', 'December'
        ];

        // Lấy tên tháng tương ứng với currentMonth
        const currentMonthName = monthNames[currentMonth];

        // Hiển thị tháng và năm trong thẻ có id là "current-month-year"
        var currentMonthYearElement = document.getElementById("current-month-year");
        currentMonthYearElement.innerHTML = currentYear + " " + currentMonthName; // Đặt giá trị mới tùy ý

    }

    // Sự kiện nhấn cho nút "prev-month"
    document.getElementById('prev-month').addEventListener('click', function () {
        // Giảm tháng đi 1
        currentMonth--;
        // Nếu tháng là tháng 0 (tháng 1), cập nhật năm và tháng về tháng 12 của năm trước
        if (currentMonth < 0) {
            currentMonth = 11;
            currentYear--;
        }
        // Cập nhật lịch
        updateCalendar(currentMonth);
    });

    // Sự kiện nhấn cho nút "next-month"
    document.getElementById('next-month').addEventListener('click', function () {
        // Tăng tháng đi 1
        currentMonth++;
        // Nếu tháng là tháng 11 (tháng 12), cập nhật năm và tháng về tháng 1 của năm sau
        if (currentMonth > 11) {
            currentMonth = 0;
            currentYear++;
        }
        // Cập nhật lịch
        updateCalendar(currentMonth);
    });

    // Khởi tạo lịch khi trang được tải lần đầu
    updateCalendar(currentMonth);
    
    updateMonthYearDisplay();
    
    async function GetBillEvent(currentMonth,  currentYear,  daysInCurrentMonth) {
        var DateStart = currentYear + "-" + (parseInt(currentMonth) + 1) + "-01";
        var DateEnd = currentYear + "-" + (parseInt(currentMonth) + 1) + "-" + daysInCurrentMonth;

        let Final = DateStart + "@@" + "@@" + DateEnd;
        const response = await fetch(`/api/users/getbillbydate?date=${Final}`);
        if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
        }

        const data = await response.json(); // Chuyển đổi response thành JSON
        var borrowDates = data.map(item => item.borrowDate);
        borrowDates.forEach(function (dateString) {
            var borrowDate = new Date(dateString);
            var day = borrowDate.getDate();
            console.log(day);
            var elementWithClass = document.getElementById("calendar-days").getElementsByClassName(day)[0];
            elementWithClass.id = 'active';

        });

        const dayItems = document.querySelectorAll('[id^="active"]');
        dayItems.forEach(dayItem => {
            dayItem.addEventListener('click', function () {

                console.log('Day clicked:', dayItem.className);
                var elementWithschedules = document.getElementById("id_schedules");
                elementWithschedules.innerHTML = '';
                data.forEach(function (item) {
                    var borrowDate = new Date(item.borrowDate);
                    var day = borrowDate.getDate();

                    if (day == dayItem.className) {
                        console.log(item); // Nếu ngày trùng khớp, in ra thông tin của phần tử
                        var dateTime = new Date(item.borrowDate);

                  
                        function formatNumber(number) {
                            return number < 10 ? '0' + number : number.toString();
                        }
                        // Lấy ra giờ, phút và giây
                        var hours = formatNumber(dateTime.getHours());
                        var minutes = formatNumber(dateTime.getMinutes());

                       
                        var time = hours + ":" + minutes;
                        var facility = "";
                        
                        if (item.facilityId == 1) {
                            facility = "Nguyễn Văn Tráng";
                        }
                        else if (item.facilityId == 2) {
                            facility = "Thành Thái";
                        }
                        else if (item.facilityId == 3) {
                            facility = "Cao Thắng";
                        }
                        else if (item.facilityId == 4) {
                            facility = "Quang Trung 2";
                        }
                       

                     


                        var scheduleWrapDiv = document.createElement('div');
                        scheduleWrapDiv.classList.add('schedule-wrap');

                        var scheduleBoxDiv = document.createElement('div');
                        scheduleBoxDiv.classList.add('schedule-box');

                        var centerDiv = document.createElement('div');
                        centerDiv.classList.add('center');

                        var scheduleDayDiv = document.createElement('div');
                        scheduleDayDiv.classList.add('schedule-day');

                        var randomBackgroundB = document.createElement('b');
                        randomBackgroundB.classList.add('random-background');
                        randomBackgroundB.textContent = dayItem.className;

                        var scheduleContentDiv = document.createElement('div');
                        scheduleContentDiv.classList.add('schedule-content');

                        var contentP1 = document.createElement('p');
                        contentP1.classList.add('content');
                        contentP1.textContent = item.bid+' created an order';

                        var contentP2 = document.createElement('p');
                        contentP2.classList.add('time');
                        contentP2.textContent = "Time: "+time + " AT: " + facility;

                        // Gắn các phần tử vào nhau theo cấu trúc
                        scheduleDayDiv.appendChild(randomBackgroundB);
                        centerDiv.appendChild(scheduleDayDiv);
                        scheduleContentDiv.appendChild(contentP1);
                        scheduleContentDiv.appendChild(contentP2);
                        centerDiv.appendChild(scheduleContentDiv);
                        scheduleBoxDiv.appendChild(centerDiv);
                        scheduleWrapDiv.appendChild(scheduleBoxDiv);

                        elementWithschedules.appendChild(scheduleWrapDiv);
                    }
                });

            });
        });
    }


<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
    google.charts.load('current', { 'packages': ['line', 'corechart'] });
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {

        var chartDiv = document.getElementById('chart_div');

        var data = new google.visualization.DataTable();
        data.addColumn('date', 'Month');
        data.addColumn('number', "Average Temperature");
        data.addColumn('number', "Average Hours of Daylight");

        data.addRows([
            [new Date(2014, 0), -.5, 5.7],
            [new Date(2014, 1), .4, 8.7],
            [new Date(2014, 2), .5, 12],
            [new Date(2014, 3), 2.9, 15.3],
            [new Date(2014, 4), 6.3, 18.6],
            [new Date(2014, 5), 9, 20.9],
            [new Date(2014, 6), 10.6, 19.8],
            [new Date(2014, 7), 10.3, 16.6],
            [new Date(2014, 8), 7.4, 13.3],
            [new Date(2014, 9), 4.4, 9.9],
            [new Date(2014, 10), 1.1, 6.6],
            [new Date(2014, 11), -.2, 4.5]
        ]);

        var classicOptions = {
            title: 'Average Temperatures and Daylight in Iceland Throughout the Year',
            width: 830,
            height: 350,
            // Gives each series an axis that matches the vAxes number below.
            series: {
                0: { targetAxisIndex: 0 },
                1: { targetAxisIndex: 1 }
            },
            vAxes: {
                // Adds titles to each axis.
                0: { title: 'Temps (Celsius)' },
                1: { title: 'Daylight' }
            },
            hAxis: {
                ticks: [new Date(2014, 0), new Date(2014, 1), new Date(2014, 2), new Date(2014, 3),
                new Date(2014, 4), new Date(2014, 5), new Date(2014, 6), new Date(2014, 7),
                new Date(2014, 8), new Date(2014, 9), new Date(2014, 10), new Date(2014, 11)
                ]
            },
            vAxis: {
                viewWindow: {
                    max: 30
                }
            }
        };

        function drawClassicChart() {
            var classicChart = new google.visualization.LineChart(chartDiv);
            classicChart.draw(data, classicOptions);
        }

        drawClassicChart();

    }
</script>
